function e(){return indexedDB.open("MeeExtensionDB",13)}function t(){return new Promise(((t,n)=>{const a=[],o=e();o.onerror=()=>{n("Error in openDB")},o.onsuccess=function(e){const n=e.target.result;n.transaction(["domains"],"readwrite").objectStore("domains").openCursor().onsuccess=e=>{const n=e.target.result;n?(!1===n.value.enabled&&a.push(n.value.domain),n.continue()):t(a)},n.close()}}))}const n=e=>`*://${e}/*`,a=e=>{if(e)return e.map((e=>n(e)))};e().onupgradeneeded=function(e){const t=e.target.result,n=t.createObjectStore("domains",{keyPath:"domain"});n.createIndex("wellknown","wellknown",{unique:!1}),n.createIndex("enabled","enabled",{unique:!1}),n.createIndex("domain","enabled",{unique:!0}),t.close()};let o=[],s=!1;async function r(e,t,n="enable"){let a={addRules:[{id:e,priority:2,action:{type:"modifyHeaders",requestHeaders:"remove"===n?[{header:"Sec-GPC",operation:"remove"},{header:"DNT",operation:"remove"}]:[{header:"Sec-GPC",operation:"set",value:"enable"===n?"1":"0"},{header:"DNT",operation:"set",value:"enable"===n?"1":"0"}]},condition:{urlFilter:t,resourceTypes:["font","image","main_frame","media","ping","script","stylesheet","sub_frame","websocket","xmlhttprequest"]}}],removeRuleIds:[e]};await chrome.declarativeNetRequest.updateDynamicRules(a)}async function c(){try{const e=await t();e.length>0&&await chrome.scripting.updateContentScripts([{id:"1",matches:a(e),js:["gpc-scripts/disable-gpc-dom.js"],runAt:"document_start"}])}catch(e){console.log(`failed to update content scripts: ${e}`)}}async function i(){try{const e=await t();await r(1,"*"),await async function(){let e=1;const a=await t();if(a){o=a;for(let t of a)await r(e++,n(t),"disable")}}(),await chrome.scripting.registerContentScripts([{id:"1",matches:["<all_urls>"],excludeMatches:a(e),js:["gpc-scripts/add-gpc-dom.js"],runAt:"document_start"}]),await c()}catch(e){console.log(`failed to register content scripts: ${e}`)}}async function d(){try{const e=(await chrome.scripting.getRegisteredContentScripts()).map((e=>e.id));await async function(){(await chrome.declarativeNetRequest.getDynamicRules()).map((e=>e.id)).map((async e=>{r(e,"*","remove")}))}(),e.length&&await chrome.scripting.unregisterContentScripts({ids:e})}catch(e){console.log(`failed to unregister content scripts: ${e}`)}}function u(t,n){let a=n.tab.id,o=(s=n.url,new URL(s).hostname.replace("www.",""));var s;let r=[];r[a]=t.data;let c=t.data;const i=!(!r[a]||!0!==r[a].gpc);var d;!0===i&&chrome.action.setIcon({tabId:a,path:"images/icon-96.png"}),d={domain:o,wellknown:i,enabled:!0},e().onsuccess=function(e){const t=e.target.result.transaction(["domains"],"readwrite").objectStore("domains");t.get(d.domain).onsuccess=e=>{const n=e.target.result,a=n&&!n.enabled?{domain:d.domain,wellknown:d.gpc,enabled:!1}:d,o=t.put(a);o.onerror=e=>{console.warn("requestUpdate error",e)},o.onsuccess=e=>{console.log("requestUpdate onsuccess",e)}}},chrome.runtime.onMessage.addListener((e=>{"POPUP_LOADED"===e.msg&&chrome.runtime.sendMessage({msg:"SEND_WELLKNOWN_TO_POPUP",data:{domain:o,wellknownData:c}})}))}async function l(){const t=await async function(t){return new Promise(((n,a)=>{const o=e();o.onerror=()=>{a("Error in openDB")},o.onsuccess=function(e){const o=e.target.result,s=o.transaction(["domains"],"readwrite").objectStore("domains").get(t);s.onerror=()=>{a(`${t} Result: has't been found`)},s.onsuccess=e=>{n(e.target.result)},o.close()}}))}("meeExtension"),n=!t||t.enabled;s=!n,n?await i():await d()}chrome.runtime.onInstalled.addListener((async function(){await l()})),chrome.runtime.onMessage.addListener(((e,n,i)=>{switch(e.msg){case"DOWNLOAD_WELLKNOWN":return u(e,n),!0;case"UPDATE_SELECTOR":return"enable"===e.mode?async function(e=["<all_urls>"]){try{const n=await t();await chrome.scripting.updateContentScripts([{id:"1",matches:e,excludeMatches:a(n),js:["gpc-scripts/add-gpc-dom.js"],runAt:"document_start"}])}catch(n){console.log(`failed to update content scripts: ${n}`)}}():c(),r(1,e.domain,e.mode),!0;case"UPDATE_ENABLED":return l(),!0;case"APP_COMMUNICATION":return function(e,t){new Promise((t=>{chrome.runtime.sendNativeMessage("Mee",{type:e.type,message:e.data},(e=>{t(e)}))})).then((e=>{t(e)})).catch((e=>{console.log("error: ",e),t(e)}))}(e,i),!0;case"CHECK_ENABLED":return function(e,t){t({isEnabled:-1===o.findIndex((t=>t===e.data))&&!s})}(e,i),!0;default:return!1}}));
//# sourceMappingURL=background.js.map
